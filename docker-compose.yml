version: "3.5"

services:
  traefik:
    image: traefik:v1.7
    command:
      - --acme.dnschallenge.provider=${ACME_DNS_PROVIDER}
      - --acme.domains=${TRAEFIK_DOMAIN}
      - --acme.email=${ACME_EMAIL}
      - --acme.entryPoint=https
      - --acme.onHostRule=true
      - --acme.storage=acme.json
      - --api
      - --debug=false
      - --defaultentrypoints=https,http
      - --docker.domain=${TRAEFIK_DOMAIN}
      - --docker.endpoint=unix:///var/run/docker.sock
      - --docker.exposedbydefault=false
      - --docker.watch=true
      - --entryPoints=Name:http Address::80
      - --entryPoints=Name:https Address::443 TLS
      - --logLevel=WARN
      - --retry
    container_name: traefik
    env_file: .env
    labels:
      - "docker-volume-backup.stop-during-backup=true"
    networks:
      - web
    ports:
      - 443:443
      - 8080:8080
      - 80:80
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - traefik:/tmp

  postgis:
    image: kartoza/postgis:12.0
    container_name: postgis
    env_file: .env
    labels:
      - "docker-volume-backup.stop-during-backup=true"
    networks:
      - private
    restart: always
    volumes:
      - ./postgis-tiger-scripts/00_setup_tiger_data.sql:/docker-entrypoint-initdb.d/00_setup_tiger_data.sql
      - ./postgis-tiger-scripts/load-nation.sh:/load-nation.sh
      - ./postgis-tiger-scripts/load-states.sh:/load-states.sh
      - backups:/backups
      - postgis-tiger-data:/tiger-data/
      - postgis:/var/lib/postgresql

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    depends_on:
      - postgis
    env_file: .env
    expose:
      - "80"
    labels:
      - "docker-volume-backup.stop-during-backup=true"
      - "traefik.basic.frontend.rule=Host:pgadmin.${TRAEFIK_DOMAIN}"
      - "traefik.docker.network=web"
      - "traefik.enable=true"
      - "traefik.port=80"
      - "traefik.protocol=http"
    networks:
      - private
      - web
    restart: always
    volumes:
      - pgadmin:/var/lib/pgadmin

  pg-backup:
    image: kartoza/pg-backup:12.0
    container_name: pg-backup
    depends_on:
      - postgis
    env_file: .env
    hostname: pg-backups
    labels:
      - "docker-volume-backup.stop-during-backup=true"
    networks:
      - private
    restart: always
    volumes:
      - backups:/backups
  
  geoserver:
    image: oscarfonts/geoserver
    container_name: geoserver
    depends_on:
      - postgis
    env_file: .env
    expose: 
      - "8080"
    labels:
      - "docker-volume-backup.stop-during-backup=true"
      - "traefik.basic.frontend.rule=Host:geoserver.${TRAEFIK_DOMAIN}"
      - "traefik.docker.network=web"
      - "traefik.enable=true"
      - "traefik.port=8080"
      - "traefik.protocol=http"
    networks:
      - private
      - web
    restart: always
    volumes:
      - geoserver_var.local.geoserver.exts.:/var/local/geoserver-exts/
      - geoserver_var.local.geoserver.:/var/local/geoserver/

  kepler:
    image: nginx
    container_name: kepler
    env_file: .env
    expose: 
      - "80"
    labels:
      - "docker-volume-backup.stop-during-backup=true"
      - "traefik.basic.frontend.rule=Host:kepler.${TRAEFIK_DOMAIN}"
      - "traefik.docker.network=web"
      - "traefik.enable=true"
      - "traefik.port=80"
      - "traefik.protocol=http"
    networks:
      - web
    restart: always
    volumes:
      - ./kepler.gl:/usr/share/nginx/html:ro

  grafana:
    image: grafana/grafana
    container_name: grafana
    env_file: .env
    expose:
      - "3000"
    labels:
      - "docker-volume-backup.stop-during-backup=true"
      - "traefik.basic.frontend.rule=Host:grafana.${TRAEFIK_DOMAIN}"
      - "traefik.docker.network=web"
      - "traefik.enable=true"
      - "traefik.port=3000"
      - "traefik.protocol=http"
    networks:
      - web
      - private
    restart: always
    volumes:
      - grafana:/var/lib/grafana grafana/grafana 

  jupyter:
    image: jupyter/datascience-notebook
    container_name: jupyter
    env_file: .env
    expose:
      - "8888"
    labels:
      - "traefik.basic.frontend.rule=Host:jupyter.${TRAEFIK_DOMAIN}"
      - "traefik.docker.network=web"
      - "traefik.enable=true"
      - "traefik.port=8888"
      - "traefik.protocol=http"
    networks:
      - web
      - private
    restart: always

  upload:
    build: ./upload_to_futter/
    command: bash -c "rm -f tmp/pids/server.pid && bundle exec rails server --environment production --binding 0.0.0.0 --port 80"
    container_name: upload
    depends_on:
      - postgis
    env_file: .env
    environment:
      - RAILS_DB_HOST=postgis
      - RAILS_DB_PASSWORD=${PG_PASS}
      - RAILS_DB_USERNAME=${PG_USER}
      - PGFUTTER_DATABASE=${PGFUTTER_DATABASE}
      - PGFUTTER_HOST=${PGFUTTER_HOST}
      - PGFUTTER_PASSWORD=${PGFUTTER_PASSWORD}
      - PGFUTTER_PORT=${PGFUTTER_PORT}
      - PGFUTTER_USERNAME=${PGFUTTER_USERNAME}
    expose:
      - "80"
    labels:
      - "docker-volume-backup.stop-during-backup=true"
      - "traefik.basic.frontend.rule=Host:upload.${TRAEFIK_DOMAIN}"
      - "traefik.docker.network=web"
      - "traefik.enable=true"
      - "traefik.port=80"
      - "traefik.protocol=http"
    networks:
      - private
      - web
    restart: always
    volumes:
      - ./upload_to_futter/:/upload_to_futter/

  backup:
    image: futurice/docker-volume-backup:2.0.0
    environment:
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_S3_BUCKET_NAME: dsgis-backups
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      BACKUP_FILENAME: latest.tar.gz
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - backups:/backup/backups:ro
      - geoserver_var.local.geoserver.:/backup/geoserver_var.local.geoserver.:ro
      - geoserver_var.local.geoserver.exts.:/backup/geoserver_var.local.geoserver.exts.:ro
      - grafana:/backup/grafana:ro
      - pgadmin:/backup/pgadmin:ro
      - postgis-tiger-data:/backup/postgis-tiger-data:ro
      - postgis:/backup/postgis:ro
      - traefik:/backup/traefik:ro

networks:
  private:
    name: private
  web:
    name: web

volumes:
  backups:
    name: backups
  geoserver_var.local.geoserver.:
    name: geoserver_var.local.geoserver.
  geoserver_var.local.geoserver.exts.:
    name: geoserver_var.local.geoserver.exts.
  grafana:
    name: grafana
  pgadmin:
    name: pgadmin
  postgis-tiger-data:
    name: postgis-tiger-data
  postgis:
    name: postgis
  traefik:
    name: traefik
