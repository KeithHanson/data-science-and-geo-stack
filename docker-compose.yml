version: "3.5"

services:
  traefik:
    image: traefik:v1.7
    command:
      - --acme.dnschallenge.provider=${ACME_DNS_PROVIDER}
      - --acme.domains=${TRAEFIK_DOMAIN}
      - --acme.email=${ACME_EMAIL}
      - --acme.entryPoint=https
      - --acme.onHostRule=true
      - --acme.storage=acme.json
      - --api
      - --debug=false
      - --defaultentrypoints=https,http
      - --docker.domain=${TRAEFIK_DOMAIN}
      - --docker.endpoint=unix:///var/run/docker.sock
      - --docker.exposedbydefault=false
      - --docker.watch=true
      - --entryPoints=Name:http Address::80
      - --entryPoints=Name:https Address::443 TLS
      - --logLevel=WARN
      - --retry
    container_name: traefik
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_REGION=${AWS_REGION}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
    networks:
      - web
    ports:
      - 443:443
      - 8080:8080
      - 80:80
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - traefik:/tmp

  postgis:
    image: kartoza/postgis:12.0
    container_name: postgis
    environment:
      - ALLOW_IP_RANGE=0.0.0.0/0
      - POSTGRES_DB=gis
      - POSTGRES_MULTIPLE_EXTENSIONS=postgis,hstore,postgis_topology,postgis_raster,pgrouting
      - POSTGRES_PASS=docker
      - POSTGRES_USER=docker
    networks:
      - private
    ports:
      - 25432:5432
    restart: always
    volumes:
      - backups:/backups
      - postgis:/var/lib/postgresql

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    depends_on:
      - postgis
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    expose:
      - "80"
    labels:
      - "traefik.basic.frontend.rule=Host:pgadmin.${TRAEFIK_DOMAIN}"
      - "traefik.docker.network=web"
      - "traefik.enable=true"
      - "traefik.port=80"
      - "traefik.protocol=http"
    networks:
      - private
      - web
    restart: always
    volumes:
      - pgadmin:/var/lib/pgadmin

  pg-backup:
    image: kartoza/pg-backup:12.0
    container_name: pg-backup
    depends_on:
      - postgis
    environment:
      - DUMPPREFIX=PG_db
      - POSTGRES_DBNAME=gis
      - POSTGRES_HOST=postgis
      - POSTGRES_PASS=${PG_PASS}
      - POSTGRES_PORT=5432
      - POSTGRES_USER=${PG_USER}
    hostname: pg-backups
    networks:
      - private
    restart: always
    volumes:
      - backups:/backups

  upload:
    build: ./upload_to_futter/
    command: bash -c "rm -f tmp/pids/server.pid && bundle exec rails server --environment production --binding 0.0.0.0 --port 80"
    container_name: upload
    depends_on:
      - postgis
    environment:
      - RAILS_DB_HOST=postgis
      - RAILS_DB_PASSWORD=${PG_PASS}
      - RAILS_DB_USERNAME=${PG_USER}
    expose:
      - "80"
    labels:
      - "traefik.basic.frontend.rule=Host:upload.${TRAEFIK_DOMAIN}"
      - "traefik.docker.network=web"
      - "traefik.enable=true"
      - "traefik.port=80"
      - "traefik.protocol=http"
    networks:
      - private
      - web
    restart: always
    volumes:
      - ./upload_to_futter/:/upload_to_futter/

networks:
  private:
    name: private
  web:
    name: web

volumes:
  backups:
    name: backups
  pgadmin:
    name: pgadmin
  postgis:
    name: postgis
  traefik:
    name: traefik
